{"remainingRequest":"D:\\dev\\house-price-generator\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\dev\\house-price-generator\\src\\views\\Index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\dev\\house-price-generator\\src\\views\\Index.vue","mtime":1686221235859},{"path":"D:\\dev\\house-price-generator\\node_modules\\css-loader\\dist\\cjs.js","mtime":1686117402451},{"path":"D:\\dev\\house-price-generator\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1686117405947},{"path":"D:\\dev\\house-price-generator\\node_modules\\postcss-loader\\src\\index.js","mtime":1686117403963},{"path":"D:\\dev\\house-price-generator\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1686117401432},{"path":"D:\\dev\\house-price-generator\\node_modules\\vue-loader\\lib\\index.js","mtime":1686117404688}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNoYXJ0LWRpdiBpbWcgew0KICAgIGRpc3BsYXk6IGJsb2NrOw0KICAgIHBhZGRpbmc6IDRweCAwOw0KfQ0KDQoubGlzdC1pdGVtLXRpdGxlIHsNCiAgICBjb2xvcjogIzAwMDAwMDsNCiAgICBmb250LXNpemU6IDE4cHg7DQogICAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgICB0ZXh0LWFsaWduOiBsZWZ0Ow0KICAgIHBhZGRpbmctYm90dG9tOiAxMnB4Ow0KfQ0KDQouaGVhZGVyLXJvdyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDM2IDQ2IDQwKSAhaW1wb3J0YW50Ow0KICAgIGNvbG9yOiAjZDdkN2Q3ICFpbXBvcnRhbnQ7DQp9DQoNCi5lbC10YWJsZSAuZXZlbi1yb3cgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig0LCAyMCwgMzEpICFpbXBvcnRhbnQ7DQogICAgY29sb3I6ICNkN2Q3ZDcgIWltcG9ydGFudDsNCiAgICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCi5lbC10YWJsZSAub2RkLXJvdyB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzE3MWYyNiAhaW1wb3J0YW50Ow0KICAgIGNvbG9yOiAjZDdkN2Q3ICFpbXBvcnRhbnQ7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KDQp9DQoNCi5zeW1ib2wtaWNvbiB7DQogICAgd2lkdGg6IDE2cHg7DQogICAgaGVpZ2h0OiAxNnB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDUwJTsNCiAgICBwYWRkaW5nOiAyLjVweDsNCiAgICBtYXJnaW4tcmlnaHQ6IDRweDsNCn0NCg0KDQouaXRlbS1ib3ggew0KICAgIHBhZGRpbmc6IDE1cHg7DQp9DQoNCg0KLmxpc3Qtd3JhcHBlciB7DQogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KfQ0KDQptYWluIHsNCiAgICBtYXgtd2lkdGg6IDEyODBweDsNCiAgICBtYXJnaW46IDAgYXV0bzsNCn0NCg0KLm1haW4tY29udGVudCB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIHJpZ2h0OiAwOw0KICAgIGxlZnQ6IDA7DQogICAgdG9wOiA2NXB4Ow0KICAgIGJvdHRvbTogMDsNCiAgICBwYWRkaW5nOiAyMHB4IDIwcHg7DQogICAgb3ZlcmZsb3c6IGF1dG87DQoNCn0NCg0KLmJsb2NrLWl0ZW0tdGFibGUtd2l0aC1wYWdpbiB7DQogICAgYmFja2dyb3VuZDogIzI0MmUyODsNCn0NCg0K"},{"version":3,"sources":["Index.vue"],"names":[],"mappingsmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"index\">\r\n        <div class=\"main-content\">\r\n            <main>\r\n                <div class=\"block-item\">\r\n                    <div class=\"flex\">\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>面积</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('area','面积','㎡')\">增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(areaItem,i) in area\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"areaItem.score\">\r\n                                        <template slot=\"prepend\">{{ areaItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('area',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>朝向</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('toward','朝向')\">增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(towardItem,i) in toward\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"towardItem.score\">\r\n                                        <template slot=\"prepend\">{{ towardItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('toward',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>景观</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('landscape','景观')\">\r\n                                    增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(landscapeItem,i) in landscape\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"landscapeItem.score\">\r\n                                        <template slot=\"prepend\">{{ landscapeItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('landscape',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>户型</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('houseType','户型')\">\r\n                                    增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(houseTypeItem,i) in houseType\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"houseTypeItem.score\">\r\n                                        <template slot=\"prepend\">{{ houseTypeItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('houseType',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>其他</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('other','其他')\">增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(otherItem,i) in other\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"otherItem.score\">\r\n                                        <template slot=\"prepend\">{{ otherItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('other',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title flex\">\r\n                                <span>楼层</span>\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"handleAdd('floor','楼层')\">增加\r\n                                </el-button>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(floorItem,i) in floor\">\r\n                                    <el-input placeholder=\"Please input\" v-model=\"floorItem.score\">\r\n                                        <template slot=\"prepend\">{{ floorItem.name }}</template>\r\n                                        <template slot=\"append\">\r\n                                            <div @click=\"handRemove('floor',i)\"><i class=\"el-icon-delete\"></i></div>\r\n                                        </template>\r\n                                    </el-input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class=\"block-item\">\r\n                    <div class=\"flex\">\r\n                        <div class=\"item-box\">\r\n                            <div class=\"list-item-title\">\r\n                                <span>基准参数</span>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <el-form ref=\"form\" :model=\"baseArg\" label-width=\"80px\">\r\n                                    <el-form-item label=\"项目\">\r\n                                        <el-input v-model=\"baseArg.project\" placeholder=\"Please input\"></el-input>\r\n                                    </el-form-item>\r\n                                    <el-form-item label=\"期号\">\r\n                                        <el-input v-model=\"baseArg.period\" placeholder=\"Please input\">\r\n                                            <template slot=\"append\">\r\n                                                <div>期</div>\r\n                                            </template>\r\n                                        </el-input>\r\n                                    </el-form-item>\r\n                                    <el-form-item label=\"楼栋号\">\r\n                                        <el-input v-model=\"baseArg.buildingNumber\" placeholder=\"Please input\">\r\n                                            <template slot=\"append\">\r\n                                                <div>号楼</div>\r\n                                            </template>\r\n                                        </el-input>\r\n                                    </el-form-item>\r\n                                    <el-form-item label=\"单元号\">\r\n                                        <el-input v-model=\"baseArg.unitNumber\" placeholder=\"Please input\">\r\n                                            <template slot=\"append\">\r\n                                                <div>单元</div>\r\n                                            </template>\r\n                                        </el-input>\r\n                                    </el-form-item>\r\n\r\n                                    <el-form-item label=\"单层户数\">\r\n                                        <el-select v-model=\"baseArg.singleFloorHouseholds\"\r\n                                                   @change=\"singleFloorHouseholdsChange\" placeholder=\"Please select\">\r\n                                            <el-option v-for=\"item in HouseholdsList\" :label=\"item.name\"\r\n                                                       :value=\"item.number\"></el-option>\r\n                                        </el-select>\r\n                                    </el-form-item>\r\n                                    <el-form-item label=\"预售均价\">\r\n                                        <el-input v-model=\"baseArg.averagePrice\" placeholder=\"Please input\">\r\n                                            <template slot=\"append\">\r\n                                                <div>元/㎡</div>\r\n                                            </template>\r\n                                        </el-input>\r\n                                    </el-form-item>\r\n                                </el-form>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"item-box flex-2\">\r\n                            <div class=\"list-item-title\">\r\n                                <span>房号配置</span>\r\n                            </div>\r\n                            <div class=\"flex-column gap-6\">\r\n                                <div v-for=\"(houseConfigInfoItem,i) in houseConfigInfo\">\r\n                                    <div class=\"select-box flex gap-6 align-items-center\">\r\n                                        <div>{{ i }}号房</div>\r\n                                        <el-select v-model=\"houseConfigInfo[i].area\" placeholder=\"选择面积\">\r\n                                            <el-option v-for=\"item in area\" :label=\"item.name\"\r\n                                                       :value=\"item.name\"></el-option>\r\n                                        </el-select>\r\n                                        <el-select v-model=\"houseConfigInfo[i].toward\" placeholder=\"选择朝向\">\r\n                                            <el-option v-for=\"item in toward\" :label=\"item.name\"\r\n                                                       :value=\"item.name\"></el-option>\r\n                                        </el-select>\r\n                                        <el-select v-model=\"houseConfigInfo[i].landscape\" placeholder=\"选择景观\">\r\n                                            <el-option v-for=\"item in landscape\" :label=\"item.name\"\r\n                                                       :value=\"item.name\"></el-option>\r\n                                        </el-select>\r\n                                        <el-select v-model=\"houseConfigInfo[i].houseType\" placeholder=\"选择户型\">\r\n                                            <el-option v-for=\"item in houseType\" :label=\"item.name\"\r\n                                                       :value=\"item.name\"></el-option>\r\n                                        </el-select>\r\n                                        <el-select v-model=\"houseConfigInfo[i].other\" placeholder=\"选择其他\">\r\n                                            <el-option v-for=\"item in other\" :label=\"item.name\"\r\n                                                       :value=\"item.name\"></el-option>\r\n                                        </el-select>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"block-item\">\r\n                    <div class=\"flex\">\r\n                        <div class=\"item-box flex-column gap-12\">\r\n                            <div class=\"list-item-title align-items-center flex gap-12\">\r\n                                <span>数据预览展示</span>\r\n\r\n                            </div>\r\n                            <div class=\"flex-base gap-12\">\r\n                                <div class=\"align-items-center flex\">\r\n\r\n                                    <el-radio-group v-model=\"radio\">\r\n                                        <el-radio :label=\"1\">乘积加权</el-radio>\r\n                                        <el-radio :label=\"2\">线性加权</el-radio>\r\n                                    </el-radio-group>\r\n                                </div>\r\n\r\n\r\n                                <el-button type=\"primary\" size=\"mini\" round @click=\"getResult\">点击生成</el-button>\r\n                            </div>\r\n\r\n                            <div class=\"flex\">\r\n                                <span>{{baseArg.project}}项目{{baseArg.period}}期{{baseArg.buildingNumber}}栋{{baseArg.unitNumber}}单元价格表</span>\r\n                                <div class=\"flex-base gap-12 align-items-center\">\r\n                                    <span>目标平均单价: {{baseArg.averagePrice}}</span>\r\n                                    <span>当前平均单价: {{averageAdjustedPrice}}</span>\r\n                                    <el-button type=\"primary\" size=\"mini\" round @click = 'autoAdjust'>自动调整平均价格</el-button>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n\r\n\r\n                            <el-table\r\n                                border\r\n                                :data=\"tableData\"\r\n                                :row-class-name=\"tableRowClassName\">\r\n                                <el-table-column v-for=\"item in tableHeader\"\r\n                                    :prop=\"item.prop\"\r\n                                    :label=\"item.value\">\r\n                                </el-table-column>\r\n                            </el-table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </main>\r\n        </div>\r\n\r\n        <el-dialog\r\n            :title=\"'添加'+addingInfo.name+'项'\"\r\n            :visible.sync=\"dialogVisible\"\r\n            width=\"30%\">\r\n            <el-form ref=\"form\" :model=\"addingInfo\" label-width=\"60px\">\r\n                <el-form-item :label=\"addingInfo.name\">\r\n\r\n                    <el-input v-if=\"addingInfo.unit\" v-model=\"addingInfo.key\">\r\n                        <template slot=\"append\">\r\n                            <div>{{ addingInfo.unit }}</div>\r\n                        </template>\r\n                    </el-input>\r\n                    <el-input v-else v-model=\"addingInfo.key\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"权重\">\r\n                    <el-input v-model=\"addingInfo.value\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n\r\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"confirmAdd(addingInfo.type)\">确定</el-button>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport Header from '@/components/Header.vue'\r\nimport Slide from '@/components/Slide.vue'\r\nimport {Chart} from '@antv/g2';\r\nimport ImpactCategory from '../util/ImpactCategory';\r\nimport {f} from \"core-js/internals/new-promise-capability\";\r\n\r\nexport default {\r\n    name: 'Home',\r\n    components: {\r\n        Header,\r\n        Slide\r\n    },\r\n    data() {\r\n        return {\r\n            radio: 1,\r\n            HouseholdsList: [\r\n                {\r\n                    number: 1,\r\n                    name: '一梯一户'\r\n                }, {\r\n                    number: 2,\r\n                    name: '一梯两户'\r\n                }, {\r\n                    number: 4,\r\n                    name: '两梯四户'\r\n                }, {\r\n                    number: 6,\r\n                    name: '两梯六户'\r\n                },\r\n            ],\r\n\r\n            baseArg: {\r\n                project:'城投锦溪城',\r\n                period: '1',\r\n                buildingNumber: '1',\r\n                unitNumber: '1',\r\n                singleFloorHouseholds: '',\r\n                averagePrice: '10000',\r\n            },\r\n            houseConfigInfo: {},\r\n            addingInfo: {\r\n                unit: '',\r\n                key: '',\r\n                value: '',\r\n                type: '',\r\n                name: ''\r\n            },\r\n\r\n            dialogVisible: false,\r\n            area: ImpactCategory.area,\r\n            toward: ImpactCategory.toward,\r\n            landscape: ImpactCategory.landscape,\r\n            houseType: ImpactCategory.houseType,\r\n            floor: ImpactCategory.floor,\r\n            other: ImpactCategory.other,\r\n\r\n            tableData: [],\r\n            tableHeader:[],\r\n            averageAdjustedPrice:'',\r\n            floorPrices:null\r\n        }\r\n    },\r\n    mounted() {\r\n\r\n\r\n    },\r\n    methods: {\r\n        getResult() {\r\n            for (let item in this.baseArg) {\r\n                if (!this.baseArg[item]) {\r\n                    this.$notify.error({\r\n                        title: '提示',\r\n                        message: '请完整填写基准参数'\r\n                    });\r\n                    return false\r\n                }\r\n            }\r\n\r\n\r\n\r\n            this.floorPrices = this.calculateFloorPrices();\r\n\r\n\r\n\r\n            let _tableHeader = [{\r\n                prop:'floor',\r\n                value:'楼层'\r\n            }]\r\n            // 遍历第一个楼层的对象，作为表头\r\n            for (const key in this.floorPrices[\"1楼\"]) {\r\n                _tableHeader.push({\r\n                    prop:key,\r\n                    value:key\r\n                })\r\n            }\r\n            this.tableHeader =_tableHeader\r\n\r\n\r\n\r\n            let _tableData = []\r\n            for (let floor in this.floorPrices) {\r\n                let obj = {\r\n                    floor:floor\r\n                }\r\n\r\n                for (let layout in this.floorPrices[floor]) {\r\n                    obj[layout] = this.floorPrices[floor][layout].price\r\n\r\n                }\r\n                _tableData.push(obj)\r\n            }\r\n            this.tableData = _tableData\r\n\r\n\r\n            console.log(this.floorPrices)\r\n\r\n\r\n        },\r\n\r\n        autoAdjust(){\r\n            let adjustmentRatio = (this.baseArg.averagePrice-this.averageAdjustedPrice)/this.baseArg.averagePrice;\r\n            let total = this.baseArg.averagePrice * this.floor.length *  Object.keys(this.houseConfigInfo).length\r\n            let _total = this.averageAdjustedPrice * this.floor.length *  Object.keys(this.houseConfigInfo).length\r\n            let k = 0\r\n            console.log(adjustmentRatio)\r\n            if(Math.abs(adjustmentRatio) > 0.001){\r\n                console.log(adjustmentRatio)\r\n                for (let floor in this.floorPrices) {\r\n                    for (let layout in this.floorPrices[floor]) {\r\n                        let oldPrice = this.floorPrices[floor][layout].price\r\n                        let newPrice = parseInt(oldPrice+(oldPrice/_total)*(total-_total))\r\n                        this.floorPrices[floor][layout].price = newPrice\r\n                        k += newPrice\r\n                    }\r\n                }\r\n\r\n                console.log(k)\r\n\r\n                this.averageAdjustedPrice = parseInt(k/(this.floor.length *  Object.keys(this.houseConfigInfo).length))\r\n\r\n                let _tableData = []\r\n                for (let floor in this.floorPrices) {\r\n                    let obj = {\r\n                        floor:floor\r\n                    }\r\n\r\n                    for (let layout in this.floorPrices[floor]) {\r\n                        obj[layout] = this.floorPrices[floor][layout].price\r\n\r\n                    }\r\n                    _tableData.push(obj)\r\n                }\r\n                this.tableData = _tableData\r\n\r\n            }\r\n\r\n\r\n\r\n        },\r\n\r\n        // 计算调整后的房价\r\n        /**\r\n         * @param layout\r\n         * @param floor 楼层\r\n         * @returns {number}\r\n         */\r\n\r\n        // 计算每一楼每个户型的调整后价格\r\n        calculateFloorPrices() {\r\n\r\n\r\n            let housePrices = {}; // 存储每一楼每个户型的调整后价格\r\n            let totalAdjustedPrice = 0; // 总的调整后价格\r\n\r\n\r\n\r\n            for (let floorItem = 0; floorItem < this.floor.length; floorItem++) {\r\n                housePrices[this.floor[floorItem].name] = {};\r\n\r\n                for (let layout in this.houseConfigInfo) {\r\n\r\n                    let data = this.calculateAdjustedPrice(layout);\r\n                    let price = parseInt(this.genPrice(data,this.floor[floorItem].score))\r\n                    housePrices[this.floor[floorItem].name][layout + '号房'] = {\r\n                        area: data.area,\r\n                        toward: data.toward,\r\n                        landscape: data.landscape,\r\n                        houseType: data.houseType,\r\n                        other: data.other,\r\n                        price:price\r\n                    };\r\n                    totalAdjustedPrice += price;\r\n                }\r\n            }\r\n\r\n\r\n            this.averageAdjustedPrice = parseInt(totalAdjustedPrice / (this.floor.length * Object.keys(this.houseConfigInfo).length)); // 计算实际的平均价格\r\n\r\n            // 根据实际平均价格和目标平均价格的差异，进行价格调整，直到达到目标平均价格\r\n            // while (averageAdjustedPrice !== targetAveragePrice) {\r\n            //     let adjustmentRatio = targetAveragePrice / averageAdjustedPrice;\r\n            //\r\n            //     for (let floor in housePrices) {\r\n            //         for (let layout in housePrices[floor]) {\r\n            //             housePrices[floor][layout] = (housePrices[floor][layout] * adjustmentRatio).toFixed(2);\r\n            //         }\r\n            //     }\r\n            //\r\n            //     totalAdjustedPrice *= adjustmentRatio;\r\n            //     averageAdjustedPrice = totalAdjustedPrice / (this.floor.length * Object.keys(this.houseConfigInfo).length);\r\n            // }\r\n\r\n            return housePrices;\r\n        },\r\n        calculateAdjustedPrice(layout) {\r\n\r\n            let area = this.area.filter((item, index) => {\r\n                if (this.houseConfigInfo[layout].area) {\r\n                    return item.name === this.houseConfigInfo[layout].area\r\n                }\r\n            });\r\n            let toward = this.toward.filter((item, index) => {\r\n                if (this.houseConfigInfo[layout].toward) {\r\n                    return item.name === this.houseConfigInfo[layout].toward\r\n                }\r\n            });\r\n            let landscape = this.landscape.filter((item, index) => {\r\n                if (this.houseConfigInfo[layout].landscape) {\r\n                    return item.name === this.houseConfigInfo[layout].landscape\r\n                }\r\n            });\r\n            let houseType = this.houseType.filter((item, index) => {\r\n                if (this.houseConfigInfo[layout].houseType) {\r\n                    return item.name === this.houseConfigInfo[layout].houseType\r\n                }\r\n            });\r\n            let other = this.other.filter((item, index) => {\r\n                if (this.houseConfigInfo[layout].other) {\r\n                    return item.name === this.houseConfigInfo[layout].other\r\n                }\r\n            });\r\n\r\n\r\n            let d = {name:'',score:1}\r\n            return {\r\n                area:area.length? area[0]:d,\r\n                toward:toward.length? toward[0]:d,\r\n                landscape:landscape.length? landscape[0]:d,\r\n                houseType:houseType.length? houseType[0]:d,\r\n                other:other.length? other[0]:d,\r\n            }\r\n        },\r\n        genPrice(data,floor){\r\n            let area = data.area.score;\r\n            let toward = data.toward.score;\r\n            let landscape = data.landscape.score;\r\n            let houseType = data.houseType.score;\r\n            let other = data.other.score;\r\n\r\n\r\n\r\n            let basePrice = Number(this.baseArg.averagePrice); // 基础价格\r\n            let adjustedPrice = 0\r\n            if (Number(this.radio) === 1) {\r\n                adjustedPrice = (floor * area * toward * landscape * houseType * other) * basePrice;\r\n            }\r\n            if (Number(this.radio) === 2) {\r\n                adjustedPrice = ((Number(floor) + Number(area) + Number(toward) + Number(landscape) + Number(houseType) + Number(other) - 6)) * basePrice + basePrice\r\n            }\r\n            return adjustedPrice\r\n\r\n        },\r\n        handleAdd(type, name, unit = '') {\r\n            this.addingInfo = {\r\n                key: '',\r\n                value: '',\r\n                unit: unit,\r\n                type: type,\r\n                name: name\r\n            }\r\n            this.dialogVisible = true\r\n        },\r\n        confirmAdd(type) {\r\n            this[type] = this[type].concat({\r\n                name: this.addingInfo.key + this.addingInfo.unit,\r\n                score: this.addingInfo.value,\r\n            })\r\n            this.addingInfo = {\r\n                key: '',\r\n                value: '',\r\n                type: '',\r\n                unit: '',\r\n                name: ''\r\n            }\r\n            this.dialogVisible = false\r\n\r\n        },\r\n        tableRowClassName({row, rowIndex}) {\r\n            if (rowIndex === 1) {\r\n                return 'warning-row';\r\n            } else if (rowIndex === 3) {\r\n                return 'success-row';\r\n            }\r\n            return '';\r\n        },\r\n        handRemove(type, i) {\r\n            if (this[type].length <= 1) {\r\n                this.$notify.error({\r\n                    title: '提示',\r\n                    message: '至少保留一项'\r\n                });\r\n            } else {\r\n                this[type].splice(i, 1)\r\n            }\r\n        },\r\n        singleFloorHouseholdsChange(val) {\r\n\r\n            this.houseConfigInfo = {}\r\n            let _val = Number(val)\r\n            for (let i = 1; i <= _val; i++) {\r\n                this.$set(this.houseConfigInfo, i, {\r\n                    area: '',\r\n                    toward: '',\r\n                    landscape: '',\r\n                    houseType: '',\r\n                    other: '',\r\n                })\r\n            }\r\n        },\r\n\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.chart-div img {\r\n    display: block;\r\n    padding: 4px 0;\r\n}\r\n\r\n.list-item-title {\r\n    color: #000000;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    text-align: left;\r\n    padding-bottom: 12px;\r\n}\r\n\r\n.header-row {\r\n    background-color: rgb(36 46 40) !important;\r\n    color: #d7d7d7 !important;\r\n}\r\n\r\n.el-table .even-row {\r\n    background-color: rgb(4, 20, 31) !important;\r\n    color: #d7d7d7 !important;\r\n    cursor: pointer;\r\n}\r\n\r\n.el-table .odd-row {\r\n    background-color: #171f26 !important;\r\n    color: #d7d7d7 !important;\r\n    cursor: pointer;\r\n\r\n}\r\n\r\n.symbol-icon {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    padding: 2.5px;\r\n    margin-right: 4px;\r\n}\r\n\r\n\r\n.item-box {\r\n    padding: 15px;\r\n}\r\n\r\n\r\n.list-wrapper {\r\n    justify-content: space-between;\r\n}\r\n\r\nmain {\r\n    max-width: 1280px;\r\n    margin: 0 auto;\r\n}\r\n\r\n.main-content {\r\n    position: absolute;\r\n    right: 0;\r\n    left: 0;\r\n    top: 65px;\r\n    bottom: 0;\r\n    padding: 20px 20px;\r\n    overflow: auto;\r\n\r\n}\r\n\r\n.block-item-table-with-pagin {\r\n    background: #242e28;\r\n}\r\n\r\n</style>\r\n"]}]}